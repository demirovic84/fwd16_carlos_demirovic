///Breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
/// Sätter en opacitet på flexcards med 0.8.
/// @param $opacity - Opacity on flexcards.
@mixin Opacity($opacity)
{
    /// Kör en loop genom alla flexcards.
    @for $i from 1 through $cardnumbers
    {
        &:nth-child(#{$i})
        {   /// Sätter opaciteten.
            opacity: $opacity;
        }
    }
}


//  /// Opacity
//  /// @param {$loop} - loopar
//  @mixin looping($opa)
//  {
//   @for $i from 1 through 9 {
//     $opacity: hsl(307  / 80%, 47%);
//   // background-color: map-get($colors , red );

//   &:nth-child(#{$i}) {
//     //color: hsl(310  / $i, 70%, 88%);
//     opa: $opa;
//     // background-color: map-get($colors , red );
//  }
//  }
//  }
// ///Mixin for card
// /// @param {num} $num - 
// /// @param {type} $type - 
// @mixin each($num, $type: false) {
//   @if $type == true {
//     &:nth-of-type(#{$num}){
//       @content;
//     }
//   }
//   @else {
//     &:nth-child(#{$num}){
//       @content;
//     }
//   }
// .box-card {
//   @include each(1) {
//      flex:100%;
//      margin-left: 15px;
//      margin-right: 15px;

//   } 
  
// }  
//   }









