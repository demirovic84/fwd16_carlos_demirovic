///Breakpoints
/// @param $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
/// Sätter en opacitet på flexcards med 0.8.
/// @param $opacity - Opacity on flexcards.
@mixin Opacity($opacity)
{
    /// Kör en loop genom alla flexcards.
    @for $i from 1 through $cardnumbers {
        &:nth-child(#{$i})
        {   /// Sätter opaciteten.
            opacity: $opacity;
        }
    }
}



/// @param everytwo - Sätter vartannat card till 60%.
@mixin everytwo { 
   @for $i from 1 through 6{
      @if $i % 2 == 0 {
         @include respond-to('large'){
            &:nth-child(#{$i}){
               flex: 60%;
            }
         }
      }
   }
}





/// bakgrundsbild
/// @param {width value} $url - Mixin som sökväg till bakgrundsbild. Hämtar denna mixin i base
@mixin background($url:'../images/South-Africa-Safari.jpg') {
    background: url($url) no-repeat center center;
    background-repeat: no-repeat; 
    background-attachment: fixed;
    background-size:cover;
    background-position: center center;
    margin: 0;
    align-items: center;
    justify-content: center;
}



